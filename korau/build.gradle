dependencies {
	if (hasAndroid) {
		androidMainApi "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
	}
	commonMainApi "com.soywiz:kmem:$kmemVersion"
	commonMainApi "com.soywiz:klock:$klockVersion"
	commonMainApi "com.soywiz:korio:$korioVersion"
	commonMainApi "com.soywiz:kds:$kdsVersion"

	//jvmMainImplementation files('lib/java-lame-3.98.4.jar')
	//jvmMainImplementation files('lib/javamp3-1.0.1.jar')

}

for (target in ["macosX64", "linuxX64", "mingwX64", "iosX64", "iosArm32", "iosArm64"]) {
	kotlin.targets[target].compilations.main {
		cinterops {
			minimp3 {}
			stb_vorbis {}
		}
	}
}

kotlin.targets.mingwX64.compilations.main.cinterops {
	win32_winmm {}
}

kotlin.targets.linuxX64.compilations.main.cinterops {
	linux_OpenAL {}
}

kotlin.targets.macosX64.compilations.main.cinterops {
	//CoreAudio {}
	//CoreAudioKit {}
	//AudioToolbox {}

	// error: compilation failed: external function @kotlin.Deprecated public open external fun new(): platform.AVFoundation.AVCaptureBracketedStillImageSettings? defined in platform.AVFoundation.AVCaptureBracketedStillImageSettingsMeta[SimpleFunctionDescriptorImpl@649a76c1] must have @SymbolName, @Intrinsic or @ObjCMethod annotation
	// * Source files: AVFoundation.kt
	// * Compiler version info: Konan: 1.1-rc2-5686 / Kotlin: 1.3.20
	// * Output kind: LIBRARY
	// exception: java.lang.Error: external function @kotlin.Deprecated public open external fun new(): platform.AVFoundation.AVCaptureBracketedStillImageSettings? defined in platform.AVFoundation.AVCaptureBracketedStillImageSettingsMeta[SimpleFunctionDescriptorImpl@649a76c1] must have @SymbolName, @Intrinsic or @ObjCMethod annotation

	//AVFoundation {}


	mac_OpenAL {}
}

if (System.getProperty("idea.version") != null) {
	if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_MAC)) {
		for (target in ["nativeCommon", "nativePosix"]) {
			kotlin.targets[target].compilations.main.cinterops {
				minimp3 {}
				stb_vorbis {}
				AVFoundation {}
				mac_OpenAL {}
			}
		}
	}
}