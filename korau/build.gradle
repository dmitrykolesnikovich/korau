apply plugin: com.soywiz.korlibs.KorlibsPlugin

korlibs {
    exposeVersion()
    dependencyCInterops("minimp3", ["mingwX64", "macosX64", "linuxX64", "iosX64", "iosArm32", "iosArm64"])
    dependencyCInterops("stb_vorbis", ["mingwX64", "macosX64", "linuxX64", "iosX64", "iosArm32", "iosArm64"])
    dependencyCInterops("win32_winmm", ["mingwX64"])
    dependencyCInterops("linux_OpenAL", ["linuxX64"])
    dependencyCInterops("mac_OpenAL", ["macosX64"])

    if (System.getProperty("idea.version") != null) {
        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_MAC)) {
            dependencyCInterops("minimp3", ["nativeCommon", "nativePosix"])
            dependencyCInterops("stb_vorbis", ["nativeCommon", "nativePosix"])
            dependencyCInterops("AVFoundation", ["nativeCommon", "nativePosix"])
            dependencyCInterops("mac_OpenAL", ["nativeCommon", "nativePosix"])
        }
    }
}

kotlin {
	linuxX64 {
		compilations.main {
			cinterops {
				linux_OpenAL {
					//print(it)
					def linuxFolder = new File(rootDir, "nlib/linuxX64")
					compilerOpts("-I/usr/include", "-I/usr/include/x86_64-linux-gnu/")
					compilerOpts("-I${new File(linuxFolder, "include").absolutePath}")
					linkerOpts("-L/usr/X11R6/lib", "-L/usr/lib/x86_64-linux-gnu")
					linkerOpts("-L${new File(linuxFolder, "lib/x86_64-linux-gnu").absolutePath}")
				}
			}
		}
	}
}

dependencies {
	commonMainApi("com.soywiz.korlibs.korio:korio:$korioVersion")

    jvmMainApi "org.jogamp.joal:joal:2.3.2"
    jvmMainApi "org.jogamp.joal:joal:2.3.2:natives-windows-amd64"
    jvmMainApi "org.jogamp.joal:joal:2.3.2:natives-windows-i586"
    jvmMainApi "org.jogamp.joal:joal:2.3.2:natives-macosx-universal"
    jvmMainApi "org.jogamp.joal:joal:2.3.2:natives-linux-i586"
    jvmMainApi "org.jogamp.joal:joal:2.3.2:natives-linux-amd64"
    jvmMainApi "org.jogamp.joal:joal:2.3.2:natives-linux-armv6"
}
